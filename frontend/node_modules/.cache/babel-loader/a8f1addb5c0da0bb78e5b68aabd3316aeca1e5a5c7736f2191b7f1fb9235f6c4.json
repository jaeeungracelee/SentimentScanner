{"ast":null,"code":"'use strict';\n\nvar bind = require('./helpers/bind');\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n// eslint-disable-next-line func-names\nvar kindOf = function (cache) {\n  // eslint-disable-next-line func-names\n  return function (thing) {\n    var str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n  };\n}(Object.create(null));\nfunction kindOfTest(type) {\n  type = type.toLowerCase();\n  return function isKindOf(thing) {\n    return kindOf(thing) === type;\n  };\n}\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return Array.isArray(val);\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor) && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nvar isArrayBuffer = kindOfTest('ArrayBuffer');\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = val && val.buffer && isArrayBuffer(val.buffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a empty Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a empty Object, otherwise false\n */\nfunction isEmptyObject(val) {\n  return val && Object.keys(val).length === 0 && Object.getPrototypeOf(val) === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nvar isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nvar isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nvar isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nvar isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} thing The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(thing) {\n  var pattern = '[object FormData]';\n  return thing && (typeof FormData === 'function' && thing instanceof FormData || toString.call(thing) === pattern || isFunction(thing.toString) && thing.toString() === pattern);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nvar isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  var product;\n  if (typeof navigator !== 'undefined' && ((product = navigator.product) === 'ReactNative' || product === 'NativeScript' || product === 'NS')) {\n    return false;\n  }\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge( /* obj1, obj2, obj3, ... */\n) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n */\n\nfunction inherits(constructor, superConstructor, props, descriptors) {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n * @returns {Object}\n */\n\nfunction toFlatObject(sourceObj, destObj, filter, propFilter) {\n  var props;\n  var i;\n  var prop;\n  var merged = {};\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && Object.getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n  return destObj;\n}\n\n/*\n * determines whether a string ends with the characters of a specified string\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n * @returns {boolean}\n */\nfunction endsWith(str, searchString, position) {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  var lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n/**\n * Returns new array from array like object or null if failed\n * @param {*} [thing]\n * @returns {?Array}\n */\nfunction toArray(thing) {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  var i = thing.length;\n  if (!isNumber(i)) return null;\n  var arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n// eslint-disable-next-line func-names\nvar isTypedArray = function (TypedArray) {\n  // eslint-disable-next-line func-names\n  return function (thing) {\n    return TypedArray && thing instanceof TypedArray;\n  };\n}(typeof Uint8Array !== 'undefined' && Object.getPrototypeOf(Uint8Array));\nfunction forEachEntry(obj, fn) {\n  var generator = obj && obj[Symbol.iterator];\n  var iterator = generator.call(obj);\n  var result;\n  while ((result = iterator.next()) && !result.done) {\n    var pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\nfunction matchAll(regExp, str) {\n  var matches;\n  var arr = [];\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n  return arr;\n}\nvar isHTMLForm = kindOfTest('HTMLFormElement');\nvar hasOwnProperty = function resolver(_hasOwnProperty) {\n  return function (obj, prop) {\n    return _hasOwnProperty.call(obj, prop);\n  };\n}(Object.prototype.hasOwnProperty);\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isEmptyObject: isEmptyObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM,\n  inherits: inherits,\n  toFlatObject: toFlatObject,\n  kindOf: kindOf,\n  kindOfTest: kindOfTest,\n  endsWith: endsWith,\n  toArray: toArray,\n  isTypedArray: isTypedArray,\n  isFileList: isFileList,\n  forEachEntry: forEachEntry,\n  matchAll: matchAll,\n  isHTMLForm: isHTMLForm,\n  hasOwnProperty: hasOwnProperty\n};","map":{"version":3,"names":["bind","require","toString","Object","prototype","kindOf","cache","thing","str","call","slice","toLowerCase","create","kindOfTest","type","isKindOf","isArray","val","Array","isUndefined","isBuffer","constructor","isArrayBuffer","isArrayBufferView","result","ArrayBuffer","isView","buffer","isString","isNumber","isObject","isPlainObject","getPrototypeOf","isEmptyObject","keys","length","isDate","isFile","isBlob","isFileList","isFunction","isStream","pipe","isFormData","pattern","FormData","isURLSearchParams","trim","replace","isStandardBrowserEnv","product","navigator","window","document","forEach","obj","fn","i","l","key","hasOwnProperty","merge","assignValue","arguments","extend","a","b","thisArg","stripBOM","content","charCodeAt","inherits","superConstructor","props","descriptors","assign","toFlatObject","sourceObj","destObj","filter","propFilter","prop","merged","getOwnPropertyNames","endsWith","searchString","position","String","undefined","lastIndex","indexOf","toArray","arr","isTypedArray","TypedArray","Uint8Array","forEachEntry","generator","Symbol","iterator","next","done","pair","value","matchAll","regExp","matches","exec","push","isHTMLForm","resolver","_hasOwnProperty","module","exports"],"sources":["/Users/gracelee/vscode/IUBDC/UnstableFour/frontend/node_modules/axios/lib/utils.js"],"sourcesContent":["'use strict';\n\nvar bind = require('./helpers/bind');\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n// eslint-disable-next-line func-names\nvar kindOf = (function(cache) {\n  // eslint-disable-next-line func-names\n  return function(thing) {\n    var str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n  };\n})(Object.create(null));\n\nfunction kindOfTest(type) {\n  type = type.toLowerCase();\n  return function isKindOf(thing) {\n    return kindOf(thing) === type;\n  };\n}\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return Array.isArray(val);\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nvar isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a empty Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a empty Object, otherwise false\n */\nfunction isEmptyObject(val) {\n  return val && Object.keys(val).length === 0 && Object.getPrototypeOf(val) === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nvar isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nvar isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nvar isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nvar isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} thing The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(thing) {\n  var pattern = '[object FormData]';\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) ||\n    toString.call(thing) === pattern ||\n    (isFunction(thing.toString) && thing.toString() === pattern)\n  );\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nvar isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  var product;\n  if (typeof navigator !== 'undefined' && (\n    (product = navigator.product) === 'ReactNative' ||\n    product === 'NativeScript' ||\n    product === 'NS')\n  ) {\n    return false;\n  }\n\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n */\n\nfunction inherits(constructor, superConstructor, props, descriptors) {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n * @returns {Object}\n */\n\nfunction toFlatObject(sourceObj, destObj, filter, propFilter) {\n  var props;\n  var i;\n  var prop;\n  var merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && Object.getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/*\n * determines whether a string ends with the characters of a specified string\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n * @returns {boolean}\n */\nfunction endsWith(str, searchString, position) {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  var lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n * @param {*} [thing]\n * @returns {?Array}\n */\nfunction toArray(thing) {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  var i = thing.length;\n  if (!isNumber(i)) return null;\n  var arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n// eslint-disable-next-line func-names\nvar isTypedArray = (function(TypedArray) {\n  // eslint-disable-next-line func-names\n  return function(thing) {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && Object.getPrototypeOf(Uint8Array));\n\nfunction forEachEntry(obj, fn) {\n  var generator = obj && obj[Symbol.iterator];\n\n  var iterator = generator.call(obj);\n\n  var result;\n\n  while ((result = iterator.next()) && !result.done) {\n    var pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\nfunction matchAll(regExp, str) {\n  var matches;\n  var arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\nvar isHTMLForm = kindOfTest('HTMLFormElement');\n\nvar hasOwnProperty = (function resolver(_hasOwnProperty) {\n  return function(obj, prop) {\n    return _hasOwnProperty.call(obj, prop);\n  };\n})(Object.prototype.hasOwnProperty);\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isEmptyObject: isEmptyObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM,\n  inherits: inherits,\n  toFlatObject: toFlatObject,\n  kindOf: kindOf,\n  kindOfTest: kindOfTest,\n  endsWith: endsWith,\n  toArray: toArray,\n  isTypedArray: isTypedArray,\n  isFileList: isFileList,\n  forEachEntry: forEachEntry,\n  matchAll: matchAll,\n  isHTMLForm: isHTMLForm,\n  hasOwnProperty: hasOwnProperty\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}