{"ast":null,"code":"var _jsxFileName = \"/Users/gracelee/vscode/IUBDC/UnstableFour/frontend/src/SwirlBackground.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { createNoise2D } from 'simplex-noise';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SwirlBackground = () => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const noise2D = createNoise2D();\n    const render = () => {\n      const {\n        width,\n        height\n      } = canvas;\n      context.clearRect(0, 0, width, height);\n      for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n          const value = noise2D(x * 0.01, y * 0.01);\n          const color = Math.floor((value + 1) * 128); // normalize to [0, 255]\n          context.fillStyle = `rgb(${color}, ${color}, ${color})`;\n          context.fillRect(x, y, 1, 1);\n        }\n      }\n      requestAnimationFrame(render);\n    };\n    render();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: 800,\n    height: 600\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this);\n};\n_s(SwirlBackground, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = SwirlBackground;\nexport default SwirlBackground;\nvar _c;\n$RefreshReg$(_c, \"SwirlBackground\");","map":{"version":3,"names":["React","useEffect","useRef","createNoise2D","jsxDEV","_jsxDEV","SwirlBackground","_s","canvasRef","canvas","current","context","getContext","noise2D","render","width","height","clearRect","y","x","value","color","Math","floor","fillStyle","fillRect","requestAnimationFrame","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gracelee/vscode/IUBDC/UnstableFour/frontend/src/SwirlBackground.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { createNoise2D } from 'simplex-noise';\n\nconst SwirlBackground = () => {\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const noise2D = createNoise2D();\n\n    const render = () => {\n      const { width, height } = canvas;\n      context.clearRect(0, 0, width, height);\n\n      for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n          const value = noise2D(x * 0.01, y * 0.01);\n          const color = Math.floor((value + 1) * 128); // normalize to [0, 255]\n          context.fillStyle = `rgb(${color}, ${color}, ${color})`;\n          context.fillRect(x, y, 1, 1);\n        }\n      }\n\n      requestAnimationFrame(render);\n    };\n\n    render();\n  }, []);\n\n  return <canvas ref={canvasRef} width={800} height={600} />;\n};\n\nexport default SwirlBackground;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,aAAa,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,SAAS,GAAGN,MAAM,CAAC,IAAI,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,MAAMQ,MAAM,GAAGD,SAAS,CAACE,OAAO;IAChC,MAAMC,OAAO,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IACvC,MAAMC,OAAO,GAAGV,aAAa,CAAC,CAAC;IAE/B,MAAMW,MAAM,GAAGA,CAAA,KAAM;MACnB,MAAM;QAAEC,KAAK;QAAEC;MAAO,CAAC,GAAGP,MAAM;MAChCE,OAAO,CAACM,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEF,KAAK,EAAEC,MAAM,CAAC;MAEtC,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,MAAM,EAAEE,CAAC,EAAE,EAAE;QAC/B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,KAAK,EAAEI,CAAC,EAAE,EAAE;UAC9B,MAAMC,KAAK,GAAGP,OAAO,CAACM,CAAC,GAAG,IAAI,EAAED,CAAC,GAAG,IAAI,CAAC;UACzC,MAAMG,KAAK,GAAGC,IAAI,CAACC,KAAK,CAAC,CAACH,KAAK,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;UAC7CT,OAAO,CAACa,SAAS,GAAG,OAAOH,KAAK,KAAKA,KAAK,KAAKA,KAAK,GAAG;UACvDV,OAAO,CAACc,QAAQ,CAACN,CAAC,EAAED,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B;MACF;MAEAQ,qBAAqB,CAACZ,MAAM,CAAC;IAC/B,CAAC;IAEDA,MAAM,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOT,OAAA;IAAQsB,GAAG,EAAEnB,SAAU;IAACO,KAAK,EAAE,GAAI;IAACC,MAAM,EAAE;EAAI;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC5D,CAAC;AAACxB,EAAA,CA5BID,eAAe;AAAA0B,EAAA,GAAf1B,eAAe;AA8BrB,eAAeA,eAAe;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}